fof(left_identity, axiom,
	! [A] : mult(i, A) = A).

fof(right_identity, axiom,
	! [A] : mult(A, i) = A).

fof(associativity, axiom,
	! [A,B,C] : mult(mult(A, B), C) = mult(A, mult(B, C))).

fof(adjoint_twice, axiom,
	! [A] : adjoint(adjoint(A)) = A).

fof(adjoint_mult, axiom, 
	! [A,B] : adjoint(mult(A, B)) = mult(adjoint(B), adjoint(A))).

%-----------------------------------------------------------------------

fof(unitary, axiom,
	! [A] : (unitary(A) <=> mult(A, adjoint(A)) = i & mult(adjoint(A), A) = i)).

fof(theorem6, conjecture,
	! [A, U, S, V, St] : (
		A = mult(U, mult(S, V)) & 
		unitary(U) &
		unitary(V) & 
		S = mult(S, mult(St, S)) &
		St = mult(St, mult(S, St)) &
		mult(adjoint(St), adjoint(S)) = mult(S, St) &
		mult(adjoint(S), adjoint(St)) = mult(St, S)
		=>
		A = mult(A, mult(mult(adjoint(V), mult(St, adjoint(U))), A)) &
		mult(adjoint(V), mult(St, adjoint(U))) = mult(mult(adjoint(V), mult(St, adjoint(U))), mult(A, mult(adjoint(V), mult(St, adjoint(U))))) &
		mult(adjoint(mult(adjoint(V), mult(St, adjoint(U)))), adjoint(A)) = mult(A, mult(adjoint(V), mult(St, adjoint(U)))) &
		mult(adjoint(A), adjoint(mult(adjoint(V), mult(St, adjoint(U))))) = mult(mult(adjoint(V), mult(St, adjoint(U))), A)
	)
).
